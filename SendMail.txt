
Public Sub SendMail()
    Dim txt$
    Dim MailDate As Date
    '    SaveAccountData
    MailDate = Format(Now, " dd-mm-yy")
    txt = "This letter is generated by a macro" & vbNewLine & "without using external programs and connecting additional libraries"
    If Send_Mail("gooruken@mail.ru", "gooruken@gmail.com", "BackUp from" & Chr(32) & MailDate, _
    txt, "H:\Sbyt" & MailDate & ".rar") Then
        MsgBox "Письмо успешно отправлено", vbInformation
    Else
        MsgBox "Не удалось отправить письмо", vbExclamation
    End If
End Sub


Private Sub SaveAccountData() 'запускать один раз - для записи в реестр Windows параметров почтового аккаунта
    SaveSetting Application.Name, "mail", "smtpserver", "smtp.gmail.com" 'Ваш SMTPServer
    SaveSetting Application.Name, "mail", "sendusername", "gooruken@gmail.com" 'Ваша учетная запись
    SaveSetting Application.Name, "mail", "sendpassword", "90285710141KSG" 'Ваш пароль
End Sub

Private Function Send_Mail(ByVal MailTo As String, ByVal MailFrom As String, ByVal MailSubject As String, _
ByVal MailText As String, Optional ByVal MailAttachment As String) As Boolean
    'функция для отправки почты без использования внешних почтовых программ
    '----------------------------------------------------------------------
    'в качестве параметров получает:
    'MailTo - адрес получателя письма
    'MailFrom - адрес отправителя письма
    'MailSubject - тема письма
    'MailText - текст письма
    'MailAttachment - полный путь к файлу вложения (необязательный параметр)
    '----------------------------------------------------------------------
    'возвращает TRUE, если отправка почты произошла успешно, и FALSE в обратном случае
    Const cdoConfigURL = "http://schemas.microsoft.com/cdo/configuration/"
    Dim smtpserver$, sendusername$, sendpassword$
    Dim cdoConfig As Object, cdoMessage As Object
    On Error Resume Next: Err.Clear
    smtpserver = GetSetting(Application.Name, "mail", "smtpserver", "")
    sendusername = GetSetting(Application.Name, "mail", "sendusername", "")
    sendpassword = GetSetting(Application.Name, "mail", "sendpassword", "")
    If Len(smtpserver) = 0 Or Len(sendusername) = 0 Or Len(sendpassword) = 0 Then Exit Function
    Set cdoConfig = CreateObject("CDO.Configuration")
    With cdoConfig.Fields
        .Item(cdoConfigURL & "sendusing") = 2
        .Item(cdoConfigURL & "smtpauthenticate") = 1
        .Item(cdoConfigURL & "smtpserver") = smtpserver
        .Item(cdoConfigURL & "sendusername") = sendusername
        .Item(cdoConfigURL & "sendpassword") = sendpassword
        'для отправки почты с аккаунта @gmail.com
        .Item(cdoConfigURL & "smtpserverport") = 465 'порт для SSL: 465
        .Item(cdoConfigURL & "smtpusessl") = 1 'использовать аутентификацию: да
        .Update
    End With
    Set cdoMessage = CreateObject("CDO.Message")
    With cdoMessage
        Set .Configuration = cdoConfig
        .BodyPart.Charset = "koi8-r"
        .From = MailFrom:
        .To = MailTo
        .Subject = MailSubject
        .TextBody = MailText
        If Len(MailAttachment) > 0 Then .AddAttachment MailAttachment 'Вложение !
        .Send
    End With
    Set cdoMessage = Nothing: Set cdoConfig = Nothing
    If Err.Number = -2147220973 Then MsgBox ("Отсутствует связь с интернетом")
    If Err.Number = -2147220975 Then MsgBox ("SMTP сервер ответил отказом")
    '    If Err.Number = 0 Then MsgBox ("Письмо отправлено")
    Send_Mail = Err = 0
End Function

